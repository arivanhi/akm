[
    {
        "id": "e80c7143e2a3d294",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3fcc5982b919ecbc",
        "type": "serial-port",
        "name": "",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": 8,
        "parity": "none",
        "stopbits": 1,
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": 10000
    },
    {
        "id": "5fca81e5eb0ff2ec",
        "type": "serial-port",
        "name": "",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "115200",
        "databits": 8,
        "parity": "none",
        "stopbits": 1,
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r\\n",
        "responsetimeout": 10000
    },
    {
        "id": "6fb353f83194865b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "emqx",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2ccb6e3b61989da0",
        "type": "serial in",
        "z": "e80c7143e2a3d294",
        "name": "esp32",
        "serial": "5fca81e5eb0ff2ec",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "35e88edf31850ac2"
            ]
        ]
    },
    {
        "id": "0ae88c07cf729856",
        "type": "debug",
        "z": "e80c7143e2a3d294",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 200,
        "wires": []
    },
    {
        "id": "f70dd21eccbe259f",
        "type": "debug",
        "z": "e80c7143e2a3d294",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 20,
        "wires": []
    },
    {
        "id": "4ab6cb578708e614",
        "type": "function",
        "z": "e80c7143e2a3d294",
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "39aaae8c6b090bb7"
            ]
        ]
    },
    {
        "id": "39aaae8c6b090bb7",
        "type": "serial out",
        "z": "e80c7143e2a3d294",
        "name": "espgetcommand",
        "serial": "5fca81e5eb0ff2ec",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "bb04dafd854e5da9",
        "type": "mqtt out",
        "z": "e80c7143e2a3d294",
        "name": "",
        "topic": "akm/prediction_data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6fb353f83194865b",
        "x": 520,
        "y": 260,
        "wires": []
    },
    {
        "id": "80af0bbfb654a139",
        "type": "serial out",
        "z": "e80c7143e2a3d294",
        "name": "espgetcommand",
        "serial": "5fca81e5eb0ff2ec",
        "x": 770,
        "y": 420,
        "wires": []
    },
    {
        "id": "1eb04c90fd9169bd",
        "type": "mqtt in",
        "z": "e80c7143e2a3d294",
        "name": "",
        "topic": "akm/command",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6fb353f83194865b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "4ab6cb578708e614",
                "f70dd21eccbe259f"
            ]
        ]
    },
    {
        "id": "0b9ecdd16b95b083",
        "type": "mqtt out",
        "z": "e80c7143e2a3d294",
        "name": "",
        "topic": "akm/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6fb353f83194865b",
        "x": 740,
        "y": 360,
        "wires": []
    },
    {
        "id": "26ba72a31716cc88",
        "type": "debug",
        "z": "e80c7143e2a3d294",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "35e88edf31850ac2",
        "type": "function",
        "z": "e80c7143e2a3d294",
        "name": "function 3",
        "func": "// Definisikan panjang fitur yang dibutuhkan\nconst FEATURE_LENGTHS = {\n    'cholesterol': 155,\n    'asam_urat': 160,\n    'gula_darah': 250\n};\nmsg.STOP=false;\n\n// Ambil payload dan parsing\nconst payload = msg.payload;\nconst parts = payload.split(':');\nif (parts.length !== 2) { return null; }\n\nconst type = parts[0].trim();\nconst value = parseFloat(parts[1]);\nif (!FEATURE_LENGTHS[type] || isNaN(value)) { return null; }\n\n// Dapatkan array dari context atau buat baru\nlet dataArray = context.get(type) || [];\ndataArray.push(value);\n\nconst currentLength = dataArray.length;\nconst targetLength = FEATURE_LENGTHS[type];\n\n// Simpan kembali array ke context\ncontext.set(type, dataArray);\n\n// LOG PROGRES: Tampilkan progres setiap 25 data\nif (currentLength % 25 === 0) {\n    node.warn(`Progres untuk ${type}: ${currentLength} / ${targetLength}`);\n}\n\n// Cek apakah array sudah penuh\nif (currentLength >= targetLength) {\n    node.warn(`Target untuk ${type} tercapai! Mengirim data...`);\n    msg.STOP = true;\n    \n    // Siapkan pesan dan kirim\n    msg.payload = {\n        type: type,\n        data: dataArray\n    };\n    \n    // Reset context untuk batch berikutnya\n    context.set(type, []); \n    return msg;\n    \n} else {\n    // Jika belum penuh, hentikan alur\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 260,
        "wires": [
            [
                "0ae88c07cf729856",
                "bb04dafd854e5da9",
                "ed201c51222ff5a4",
                "9dbfd798c162e0e4"
            ]
        ]
    },
    {
        "id": "ed201c51222ff5a4",
        "type": "function",
        "z": "e80c7143e2a3d294",
        "name": "function 5",
        "func": "let type = msg.payload.type\nif (msg.STOP){\n    msg.payload = type + \":STOP\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "0b9ecdd16b95b083",
                "26ba72a31716cc88"
            ]
        ]
    },
    {
        "id": "9dbfd798c162e0e4",
        "type": "function",
        "z": "e80c7143e2a3d294",
        "name": "function 2",
        "func": "let type = msg.payload.type\nif (msg.STOP){\n    msg.payload = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 420,
        "wires": [
            [
                "80af0bbfb654a139"
            ]
        ]
    },
    {
        "id": "d48dcf45ecf1b8cd",
        "type": "mqtt in",
        "z": "e80c7143e2a3d294",
        "name": "",
        "topic": "akm/prediction_result",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6fb353f83194865b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 480,
        "wires": [
            [
                "6b669bef239b9e6e"
            ]
        ]
    },
    {
        "id": "6b669bef239b9e6e",
        "type": "debug",
        "z": "e80c7143e2a3d294",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 480,
        "wires": []
    }
]